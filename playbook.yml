
---
- hosts: all

  vars_files:
    - vars/default.yml

  vars_prompt:
    - name: "user_password"
      prompt: "Enter password for newly created user (leave blank if not creating new user)"
      private: true
      encrypt: "sha512_crypt"

  tasks:
    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Create Users
      become: true
      user:
        name: "{{ username }}"
        password: "{{ user_password }}"
        groups: sudo
        append: yes
        shell: /usr/bin/bash
        update_password: on_create

    - name: Add SSH keys to User's Known Hosts
      become: true
      authorized_key:
        user: "{{ username }}"
        key: "{{ item }}"
      with_file:
        - "pub_keys/access_keys"

# SETUP INTERNAL NETWORKING
    - name: Install UFW
      become: true
      apt:
        name: [ufw, iptables, sudo]
        state: present

    - name: Allow UFW Rules for Multiple IPs
      become: true
      ufw:
        rule: allow
        from_ip: "{{ item.0 }}"
        proto: "{{ item.1.proto }}"
        to_port: "{{ item.1.port }}"
      with_nested:
        - "{{ vswitch.ips }}"  # IPs from vars/default.yaml
        - "{{ vswitch.protocols_and_ports }}"
    - name: Allow UFW Rules for General Ports
      become: true
      ufw:
        rule: allow
        port: "{{ item }}"
      loop:
        - 22
        - 2376
        - 6443

# SETUP VLAN interface between nodes
    # DOCS: https://docs.hetzner.com/robot/dedicated-server/network/vswitch/
    # NOTE: configure your network_interface from values you get from `ifconfig` or the `get_all_available_interfaces.yml` playbook.
    - name: Create VLAN Interface
      command:
        cmd: "sudo ip link add link {{ network_interface }} name {{ network_interface }}.{{ vswitch.vlan_id }} type vlan id {{ vswitch.vlan_id }}"

    - name: Set MTU and Activate Interface
      command:
        cmd: "sudo ip link set {{ network_interface }}.{{ vswitch.vlan_id }} mtu 1400"
    - name: Activate VLAN Interface
      command:
        cmd: "sudo ip link set dev {{ network_interface }}.{{ vswitch.vlan_id }} up"

    - name: Assign IP Address to VLAN Interface
      command:
        cmd: "sudo ip addr add {{ vlan_ip }}/24 brd {{ vswitch.vlan_broadcast }} dev {{ network_interface }}.{{ vswitch.vlan_id }}"

# SETUP DOCKER
    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

# This allows executing docker as the user without sudo. (not clear if this is desirable on prod server?)
    - name: Ensure docker group exists
      become: true
      group:
        name: docker
        state: present

    - name: Add user to docker group
      become: true
      user:
        name: "{{ username }}"
        groups: docker
        append: yes

